# .github/workflows/swiftlint.yml
name: SwiftLint Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  lint:
    name: Run SwiftLint
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install SwiftLint
        run: brew install swiftlint
        
      - name: Run SwiftLint and save JSON report
        run: |
          set +e
          swiftlint --reporter json > swiftlint-result.json
          swiftlint_exit_code=$?
          echo "SwiftLint exit code: $swiftlint_exit_code"
          set -e
        
      - name: Display lint results
        run: cat swiftlint-result.json
        
      - name: Check and fail if lint violations exist
        run: |
          if [ ! -f swiftlint-result.json ]; then
            echo "❌ SwiftLint report not generated"
            exit 1
          fi
          
          count=$(jq length swiftlint-result.json)
          if [ "$count" -gt 0 ]; then
            echo "❌ SwiftLint found $count violations"
            jq -r '.[] | "  \(.severity): \(.file):\(.line):\(.character) \(.rule_id) - \(.reason)"' swiftlint-result.json
            exit 1
          else
            echo "✅ SwiftLint passed with no violations"
          fi
        
      - name: Upload SwiftLint report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: swiftlint-report
          path: swiftlint-result.json
          
      - name: Create summary from SwiftLint results
        id: summary
        run: |
          echo "SwiftLint Issues:" > summary.txt
          cat swiftlint-result.json | jq -r '.[] | "\(.file):\(.line) \(.rule_id) - \(.reason)"' >> summary.txt
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat summary.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Post comment on PR with summary
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.summary.outputs.body }}
